// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  free
  premium
}

enum BillingCycle {
  monthly
  yearly
}

model User {
  id                   String                 @id @default(uuid())
  name                 String
  email                String                 @unique
  password_hash        String
  plan                 Plan                   @default(free)
  created_at           DateTime               @default(now())
  subscriptions        Subscription[]
  subscriptionsHistory SubscriptionsHistory[]
  resetTokens          PasswordResetToken[]

  @@map("users")
}

model PasswordResetToken {
  id         String   @id @default(uuid())
  token      String   @unique
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  expires_at DateTime
  created_at DateTime @default(now())

  @@map("password_reset_token")
}

model Subscription {
  id                   String                 @id @default(uuid())
  user_id              String
  user                 User                   @relation(fields: [user_id], references: [id])
  name                 String
  price                Float
  billing_cycle        BillingCycle
  due_date             DateTime
  installment          Int?
  auto_detected        Boolean                @default(false)
  created_at           DateTime               @default(now())
  subscriptionsHistory SubscriptionsHistory[]

  @@map("subscriptions")
}

model SubscriptionsHistory {
  id              String       @id @default(uuid())
  user_id         String
  user            User         @relation(fields: [user_id], references: [id])
  subscription_id String
  subscription    Subscription @relation(fields: [subscription_id], references: [id])
  due_date        DateTime
  price           Float
  created_at      DateTime     @default(now())

  @@map("subscriptions_history")
}
